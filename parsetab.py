
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV END LPAREN MINUS MULT NUM PLUS PRINTEAR RPARENstatement : PRINTEAR expression ENDexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term MULT factor\n            | term DIV factorterm : factorfactor : NUMfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'PRINTEAR':([0,],[2,]),'$end':([1,8,],[0,-1,]),'NUM':([2,7,9,10,11,12,],[6,6,6,6,6,6,]),'LPAREN':([2,7,9,10,11,12,],[7,7,7,7,7,7,]),'END':([3,4,5,6,14,15,16,17,18,],[8,-4,-7,-8,-2,-3,-5,-6,-9,]),'PLUS':([3,4,5,6,13,14,15,16,17,18,],[9,-4,-7,-8,9,-2,-3,-5,-6,-9,]),'MINUS':([3,4,5,6,13,14,15,16,17,18,],[10,-4,-7,-8,10,-2,-3,-5,-6,-9,]),'RPAREN':([4,5,6,13,14,15,16,17,18,],[-4,-7,-8,18,-2,-3,-5,-6,-9,]),'MULT':([4,5,6,14,15,16,17,18,],[11,-7,-8,11,11,-5,-6,-9,]),'DIV':([4,5,6,14,15,16,17,18,],[12,-7,-8,12,12,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([2,7,],[3,13,]),'term':([2,7,9,10,],[4,4,14,15,]),'factor':([2,7,9,10,11,12,],[5,5,5,5,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINTEAR expression END','statement',3,'p_statement_printear','sintactico.py',11),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','sintactico.py',16),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','sintactico.py',17),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',23),
  ('term -> term MULT factor','term',3,'p_term_binop','sintactico.py',27),
  ('term -> term DIV factor','term',3,'p_term_binop','sintactico.py',28),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',34),
  ('factor -> NUM','factor',1,'p_factor_num','sintactico.py',38),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',42),
]
